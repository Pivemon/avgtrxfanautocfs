function refreshPageAccessToken() {
  var sheet = SpreadsheetApp.getActiveSpreadsheet().getSheetByName("Settings");
  if (!sheet) {
    sheet = SpreadsheetApp.getActiveSpreadsheet().insertSheet("Settings");
    sheet.getRange("A1").setValue("Access Token");
  }

  var oldAccessToken = sheet.getRange("A2").getValue(); // Token hi·ªán t·∫°i
  var appId = "your_app_id"; // App ID
  var appSecret = "your_app_secret"; // App Secret
  sheet.getRange("A4").setValue(oldAccessToken);
  // H√†m h·ªßy quy·ªÅn token c≈©
function revokeOldAccessToken(oldAccessToken) {
  var url = "https://graph.facebook.com/v22.0/<user id trong ·ª©ng d·ª•ng c·ªßa b·∫°n>/permissions?access_token=" + oldAccessToken;

  try {
    // Y√™u c·∫ßu h·ªßy quy·ªÅn (revoke) token
    var response = UrlFetchApp.fetch(url, {
      method: "DELETE"  // S·ª≠ d·ª•ng ph∆∞∆°ng th·ª©c DELETE ƒë·ªÉ y√™u c·∫ßu h·ªßy quy·ªÅn
    });

    var jsonResponse = JSON.parse(response.getContentText());
    Logger.log("Token c≈© ƒë√£ ƒë∆∞·ª£c h·ªßy quy·ªÅn: " + JSON.stringify(jsonResponse));

  } catch (e) {
    Logger.log("L·ªói khi h·ªßy token c≈©: " + e.toString());
  }
}
  // H·ªßy quy·ªÅn token c≈©
  revokeOldAccessToken(oldAccessToken);

  // URL ƒë·ªÉ l·∫•y token m·ªõi
  var url = "https://graph.facebook.com/v22.0/oauth/access_token" +
            "?grant_type=fb_exchange_token" +
            "&client_id=" + appId +
            "&client_secret=" + appSecret +
            "&fb_exchange_token=" + oldAccessToken;

  try {
    var response = UrlFetchApp.fetch(url);
    var json = JSON.parse(response.getContentText());

    if (json.access_token) {
      sheet.getRange("A2").setValue(json.access_token); // L∆∞u token m·ªõi v√†o A2
      Logger.log("Token m·ªõi ƒë√£ ƒë∆∞·ª£c c·∫≠p nh·∫≠t!");
    } else {
      Logger.log("L·ªói l·∫•y token m·ªõi: " + response.getContentText());
    }
  } catch (e) {
    Logger.log("L·ªói API: " + e.toString());
  }
}
// H√†m ki·ªÉm tra t√≠nh h·ª£p l·ªá c·ªßa token sau khi h·ªßy
function checkTokenValidity(oldAccessToken) {
  var url = "https://graph.facebook.com/debug_token?input_token=" + oldAccessToken + "&access_token=" + oldAccessToken;

  try {
    var response = UrlFetchApp.fetch(url, {
      muteHttpExceptions: true // B·ªè qua l·ªói HTTP v√† l·∫•y ph·∫£n h·ªìi chi ti·∫øt
    });
    var jsonResponse = JSON.parse(response.getContentText());

    if (jsonResponse.data && jsonResponse.data.is_valid) {
      Logger.log("Token v·∫´n c√≤n h·ª£p l·ªá.");
    } else {
      Logger.log("Token ƒë√£ h·∫øt h·∫°n ho·∫∑c kh√¥ng h·ª£p l·ªá. "+oldAccessToken);
    }
  } catch (e) {
    Logger.log("L·ªói khi ki·ªÉm tra token: " + e.toString());
  }
}
function tokenHientai() {
  Logger.log("Token hi·ªán t·∫°i: " + getStoredToken());
}
function getStoredToken() {
  var sheet = SpreadsheetApp.getActiveSpreadsheet().getSheetByName("Settings");
  return sheet.getRange("A2").getValue();
}
function postConfessionsToFacebook() {
  var sheet = SpreadsheetApp.getActiveSpreadsheet().getSheetByName("C√¢u tr·∫£ l·ªùi bi·ªÉu m·∫´u"); // Thay "Sheet1" b·∫±ng t√™n sheet c·ªßa b·∫°n
  var e2Formula = sheet.getRange("E2").getFormula(); // L·∫•y c√¥ng th·ª©c trong √¥ E2
  var match = e2Formula.match(/C(\d+)/i); // T√¨m s·ªë h√†ng m√† E2 ƒëang tham chi·∫øu ƒë·∫øn

  if (!match) {
    Logger.log("Kh√¥ng t√¨m th·∫•y √¥ tham chi·∫øu trong E2.");
    return;
  }

  var startRow = parseInt(match[1]); // L·∫•y s·ªë h√†ng t·ª´ c√¥ng th·ª©c trong E2
  var endRow = startRow + 9; // L·∫•y 20 d√≤ng t·ª´ Cx -> C(x+19)
  var values = sheet.getRange("C" + startRow + ":C" + endRow).getValues(); // L·∫•y d·ªØ li·ªáu

  // Ki·ªÉm tra xem t·∫•t c·∫£ 10 √¥ ƒë·ªÅu c√≥ d·ªØ li·ªáu
  var allHaveData = values.every(row => row[0].trim() !== "");

  if (!allHaveData) {
    Logger.log("Kh√¥ng ƒë·ªß 10 confession ƒë·ªÉ ƒëƒÉng.");
    return;
  }


  // ƒê·ªãnh d·∫°ng n·ªôi dung b√†i ƒëƒÉng
  var postContent = "üå∏üíÆüå∏üíÆüå∏\n";
  values.forEach(function(row, index) {
    if (row[0].trim() !== "") { // B·ªè qua d√≤ng tr·ªëng
      postContent += "#cfs" + (startRow + index + 997) + " " + row[0] + "\n";
    }
  });
  postContent += "üå∏üíÆüå∏üíÆüå∏";

  // Th√¥ng tin Facebook API
  var pageAccessToken = getStoredToken(); // Token
  var pageId = "Page ID c·ªßa b·∫°n"; // ID Page
  var url = "https://graph.facebook.com/" + pageId + "/feed";

  // G·ª≠i y√™u c·∫ßu ƒëƒÉng b√†i l√™n Facebook
  var options = {
    method: "post",
    payload: {
      message: postContent,
      access_token: pageAccessToken
    }
  };

  try {
    var response = UrlFetchApp.fetch(url, options);
    var json = JSON.parse(response.getContentText());

    if (json.id) {
      Logger.log("ƒêƒÉng b√†i th√†nh c√¥ng! ID b√†i vi·∫øt: " + json.id);

      // C·∫≠p nh·∫≠t c√¥ng th·ª©c trong E2 ƒë·ªÉ tham chi·∫øu ƒë·∫øn √¥ C(x+10)
      var nextRow = startRow + 10;
      sheet.getRange("E2").setFormula("=C" + nextRow);
    } else {
      Logger.log("L·ªói khi ƒëƒÉng b√†i: " + response.getContentText());
    }
  } catch (e) {
    // Ki·ªÉm tra n·∫øu l·ªói l√† do token h·∫øt h·∫°n (code 190)
    if (e.message.includes('Error validating access token: Session has expired on')) {
      Logger.log("Token h·∫øt h·∫°n, ƒëang l√†m m·ªõi token...");

      // G·ªçi h√†m refreshPageAccessToken ƒë·ªÉ l·∫•y token m·ªõi
      refreshPageAccessToken();

      // Th·ª≠ l·∫°i sau khi token ƒë√£ ƒë∆∞·ª£c l√†m m·ªõi
      postConfessionsToFacebook();
    } else {
      Logger.log("L·ªói kh√¥ng ph·∫£i do token: " + e.toString());
    }
  }
}


/* function checkMonthAndRun() {
  var currentMonth = new Date().getMonth(); // L·∫•y th√°ng hi·ªán t·∫°i (0-11, 0 l√† th√°ng 1)
  
  // Ki·ªÉm tra n·∫øu l√† th√°ng ch·∫µn (th√°ng 2, 4, 6, 8, 10, 12)
  if ([1, 3, 5, 7, 9, 11].indexOf(currentMonth) !== -1) {
    // G·ªçi h√†m refreshPageAccessToken n·∫øu l√† th√°ng ch·∫µn
    refreshPageAccessToken();
  } else {
    Logger.log("Kh√¥ng ph·∫£i th√°ng ch·∫µn. Trigger kh√¥ng th·ª±c hi·ªán.");
  }
}
function createTimeDrivenTrigger() {
  // Th√™m trigger ch·∫°y m·ªói th√°ng v√†o ng√†y m√πng 4 l√∫c 9 gi·ªù s√°ng
  ScriptApp.newTrigger('checkMonthAndRun') 
      .timeBased()
      .onMonthDay(4)  // ƒê·∫∑t trigger ch·∫°y v√†o ng√†y m√πng 4 m·ªói th√°ng
      .atHour(3)      // Th·ªùi gian ch·∫°y l√† 3 gi·ªù s√°ng
      .create();
} */

function postConfessionsToInstagram() {
  var sheet = SpreadsheetApp.getActiveSpreadsheet().getSheetByName("C√¢u tr·∫£ l·ªùi bi·ªÉu m·∫´u");
  var e2Formula = sheet.getRange("F2").getFormula();
  var match = e2Formula.match(/C(\d+)/i);
  
  if (!match) {
    Logger.log("Kh√¥ng t√¨m th·∫•y √¥ tham chi·∫øu trong F2.");
    return;
  }
  
  var startRow = parseInt(match[1]);
  var endRow = startRow + 9;
  var values = sheet.getRange("C" + startRow + ":C" + endRow).getValues();

  // Ki·ªÉm tra xem t·∫•t c·∫£ 10 √¥ ƒë·ªÅu c√≥ d·ªØ li·ªáu
  var allHaveData = values.every(row => row[0].trim() !== "");

  if (!allHaveData) {
    Logger.log("Kh√¥ng ƒë·ªß 10 confession ƒë·ªÉ ƒëƒÉng.");
    return;
  }

  var today = new Date();
  var day = today.getDate();
  var month = today.getMonth() + 1;
  var year = today.getFullYear();
  var baseTitle = "Confessions ng√†y " + day + " th√°ng " + month + " nƒÉm " + year;

  var maxCaptionLength = 2200;
  var imgurImageUrl = "https://i.imgur.com/caigiday"; // Thay b·∫±ng link ·∫£nh Imgur th·∫≠t
  var pageAccessToken = getStoredToken();
  var instagramAccountId = "YOUR_ID"; //Thay b·∫±ng Instagram Business ID c·ªßa b·∫°n

  var currentCaption = "";
  var captions = [];
  
  values.forEach(function(row, index) {
    var confessionText = "\n#cfs" + (startRow + index + 997) + "\n" + row[0] + "\n";
    
    if (currentCaption.length + confessionText.length > maxCaptionLength) {
      captions.push(currentCaption + "üå∏üíÆüå∏üíÆüå∏");
      currentCaption = confessionText; // B·∫Øt ƒë·∫ßu b√†i m·ªõi
    } else {
      currentCaption += confessionText;
    }
  });

  if (currentCaption.length > 0) {
    captions.push(currentCaption + "üå∏üíÆüå∏üíÆüå∏");
  }

  try {
    for (var i = 0; i < captions.length; i++) {
      var totalParts = captions.length;
      var title = totalParts > 1 ? `${baseTitle} (Ph·∫ßn ${i + 1}/${totalParts})` : baseTitle;
      var caption = title + "\n" + captions[i];

      var createMediaUrl = "https://graph.facebook.com/v22.0/" + instagramAccountId + "/media";
      var createMediaOptions = {
        method: "post",
        payload: {
          image_url: imgurImageUrl,
          caption: caption,
          access_token: pageAccessToken
        }
      };

      var response = UrlFetchApp.fetch(createMediaUrl, createMediaOptions);
      var json = JSON.parse(response.getContentText());

      if (json.id) {
        var publishUrl = "https://graph.facebook.com/v22.0/" + instagramAccountId + "/media_publish";
        var publishOptions = {
          method: "post",
          payload: {
            creation_id: json.id,
            access_token: pageAccessToken
          }
        };

        var publishResponse = UrlFetchApp.fetch(publishUrl, publishOptions);
        var publishJson = JSON.parse(publishResponse.getContentText());

        if (publishJson.id) {
          Logger.log("ƒêƒÉng ph·∫ßn " + (i + 1) + " th√†nh c√¥ng! ID b√†i vi·∫øt: " + publishJson.id);
        } else {
          Logger.log("L·ªói khi xu·∫•t b·∫£n ph·∫ßn " + (i + 1) + ": " + publishResponse.getContentText());
        }
      } else {
        Logger.log("L·ªói khi t·∫°o media ph·∫ßn " + (i + 1) + ": " + response.getContentText());
      }
    }

    var nextRow = startRow + 10;
    sheet.getRange("F2").setFormula("=C" + nextRow);
  } catch (e) {
    Logger.log("L·ªói: " + e.toString());
  }
}

function previewConfessionPost() {
  var sheet = SpreadsheetApp.getActiveSpreadsheet().getSheetByName("C√¢u tr·∫£ l·ªùi bi·ªÉu m·∫´u"); // L·∫•y sheet
  var e2Formula = sheet.getRange("E2").getFormula(); // L·∫•y c√¥ng th·ª©c t·ª´ √¥ E2
  var match = e2Formula.match(/C(\d+)/i); // T√¨m s·ªë h√†ng m√† E2 ƒëang tham chi·∫øu ƒë·∫øn

  if (!match) {
    Logger.log("Kh√¥ng t√¨m th·∫•y √¥ tham chi·∫øu trong E2.");
    return;
  }

  var startRow = parseInt(match[1]); // L·∫•y s·ªë h√†ng t·ª´ c√¥ng th·ª©c trong E2
  var endRow = startRow + 9; // L·∫•y 10 d√≤ng t·ª´ Cx -> C(x+9)
  var values = sheet.getRange("C" + startRow + ":C" + endRow).getValues(); // L·∫•y d·ªØ li·ªáu

  // Ki·ªÉm tra xem t·∫•t c·∫£ 10 √¥ ƒë·ªÅu c√≥ d·ªØ li·ªáu
  var allHaveData = values.every(row => row[0].trim().length > 0);

  if (!allHaveData) {
    Logger.log("‚ùå Kh√¥ng ƒë·ªß 10 confession ƒë·ªÉ ƒëƒÉng.");
    return;
  }

  // ƒê·ªãnh d·∫°ng n·ªôi dung b√†i ƒëƒÉng
  var postContent = "üå∏üíÆüå∏üíÆüå∏\n\n";
  values.forEach(function(row, index) {
    if (row[0].trim().length > 0) { // B·ªè qua d√≤ng tr·ªëng
      postContent += "#cfs" + (startRow + index + 997) + "\n" + row[0] + "\n\n";
    }
  });
  postContent += "üå∏üíÆüå∏üíÆüå∏\n\n[Confessions hi·ªán ƒë√£ c√≥ m·∫∑t tr√™n Instagram]\nhttps://www.instagram.com/avgtrxfancfs/";

  // Hi·ªÉn th·ªã n·ªôi dung qua Logger
  Logger.log("üì¢ Xem tr∆∞·ªõc b√†i ƒëƒÉng:\n" + postContent);
}
